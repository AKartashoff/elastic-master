// @SOURCE:/Users/antonkartashov/Documents/project/elastic-master/conf/routes
// @HASH:d14e3889be6d8dcf75fb8429fc4aaeaaad225cb8
// @DATE:Tue May 26 22:06:08 CEST 2015


import play.core._
import play.core.Router._
import play.core.j._

import play.api.mvc._
import play.libs.F

import Router.queryString

object Routes extends Router.Routes {

private var _prefix = "/"

def setPrefix(prefix: String) {
  _prefix = prefix
  List[(String,Routes)]().foreach {
    case (p, router) => router.setPrefix(prefix + (if(prefix.endsWith("/")) "" else "/") + p)
  }
}

def prefix = _prefix

lazy val defaultPrefix = { if(Routes.prefix.endsWith("/")) "" else "/" }


// @LINE:6
private[this] lazy val controllers_Application_index0 = Route("GET", PathPattern(List(StaticPart(Routes.prefix))))
        

// @LINE:7
private[this] lazy val controllers_Application_getJson1 = Route("GET", PathPattern(List(StaticPart(Routes.prefix),StaticPart(Routes.defaultPrefix),StaticPart("json"))))
        

// @LINE:11
private[this] lazy val controllers_Application_pentaho2 = Route("GET", PathPattern(List(StaticPart(Routes.prefix),StaticPart(Routes.defaultPrefix),StaticPart("pentaho"))))
        

// @LINE:12
private[this] lazy val controllers_Application_upload3 = Route("POST", PathPattern(List(StaticPart(Routes.prefix),StaticPart(Routes.defaultPrefix),StaticPart("upload"))))
        

// @LINE:14
private[this] lazy val controllers_Application_getFlowJson4 = Route("GET", PathPattern(List(StaticPart(Routes.prefix),StaticPart(Routes.defaultPrefix),StaticPart("flow"))))
        

// @LINE:15
private[this] lazy val controllers_Application_checkPreFlight5 = Route("OPTIONS", PathPattern(List(StaticPart(Routes.prefix),StaticPart(Routes.defaultPrefix),StaticPart("json"))))
        

// @LINE:18
private[this] lazy val controllers_Assets_at6 = Route("GET", PathPattern(List(StaticPart(Routes.prefix),StaticPart(Routes.defaultPrefix),StaticPart("assets/"),DynamicPart("file", """.+""",false))))
        

// @LINE:19
private[this] lazy val controllers_WebJarAssets_at7 = Route("GET", PathPattern(List(StaticPart(Routes.prefix),StaticPart(Routes.defaultPrefix),StaticPart("webjars/"),DynamicPart("file", """.+""",false))))
        
def documentation = List(("""GET""", prefix,"""controllers.Application.index()"""),("""GET""", prefix + (if(prefix.endsWith("/")) "" else "/") + """json""","""controllers.Application.getJson()"""),("""GET""", prefix + (if(prefix.endsWith("/")) "" else "/") + """pentaho""","""controllers.Application.pentaho()"""),("""POST""", prefix + (if(prefix.endsWith("/")) "" else "/") + """upload""","""controllers.Application.upload()"""),("""GET""", prefix + (if(prefix.endsWith("/")) "" else "/") + """flow""","""controllers.Application.getFlowJson(id:Integer)"""),("""OPTIONS""", prefix + (if(prefix.endsWith("/")) "" else "/") + """json""","""controllers.Application.checkPreFlight"""),("""GET""", prefix + (if(prefix.endsWith("/")) "" else "/") + """assets/$file<.+>""","""controllers.Assets.at(path:String = "/public", file:String)"""),("""GET""", prefix + (if(prefix.endsWith("/")) "" else "/") + """webjars/$file<.+>""","""controllers.WebJarAssets.at(file:String)""")).foldLeft(List.empty[(String,String,String)]) { (s,e) => e.asInstanceOf[Any] match {
  case r @ (_,_,_) => s :+ r.asInstanceOf[(String,String,String)]
  case l => s ++ l.asInstanceOf[List[(String,String,String)]] 
}}
      

def routes:PartialFunction[RequestHeader,Handler] = {

// @LINE:6
case controllers_Application_index0(params) => {
   call { 
        invokeHandler(controllers.Application.index(), HandlerDef(this, "controllers.Application", "index", Nil,"GET", """ Home page""", Routes.prefix + """"""))
   }
}
        

// @LINE:7
case controllers_Application_getJson1(params) => {
   call { 
        invokeHandler(controllers.Application.getJson(), HandlerDef(this, "controllers.Application", "getJson", Nil,"GET", """""", Routes.prefix + """json"""))
   }
}
        

// @LINE:11
case controllers_Application_pentaho2(params) => {
   call { 
        invokeHandler(controllers.Application.pentaho(), HandlerDef(this, "controllers.Application", "pentaho", Nil,"GET", """routes for pentaho view (uploading files)""", Routes.prefix + """pentaho"""))
   }
}
        

// @LINE:12
case controllers_Application_upload3(params) => {
   call { 
        invokeHandler(controllers.Application.upload(), HandlerDef(this, "controllers.Application", "upload", Nil,"POST", """""", Routes.prefix + """upload"""))
   }
}
        

// @LINE:14
case controllers_Application_getFlowJson4(params) => {
   call(params.fromQuery[Integer]("id", None)) { (id) =>
        invokeHandler(controllers.Application.getFlowJson(id), HandlerDef(this, "controllers.Application", "getFlowJson", Seq(classOf[Integer]),"GET", """""", Routes.prefix + """flow"""))
   }
}
        

// @LINE:15
case controllers_Application_checkPreFlight5(params) => {
   call { 
        invokeHandler(controllers.Application.checkPreFlight, HandlerDef(this, "controllers.Application", "checkPreFlight", Nil,"OPTIONS", """""", Routes.prefix + """json"""))
   }
}
        

// @LINE:18
case controllers_Assets_at6(params) => {
   call(Param[String]("path", Right("/public")), params.fromPath[String]("file", None)) { (path, file) =>
        invokeHandler(controllers.Assets.at(path, file), HandlerDef(this, "controllers.Assets", "at", Seq(classOf[String], classOf[String]),"GET", """ Map static resources from the /public folder to the /assets URL path""", Routes.prefix + """assets/$file<.+>"""))
   }
}
        

// @LINE:19
case controllers_WebJarAssets_at7(params) => {
   call(params.fromPath[String]("file", None)) { (file) =>
        invokeHandler(controllers.WebJarAssets.at(file), HandlerDef(this, "controllers.WebJarAssets", "at", Seq(classOf[String]),"GET", """""", Routes.prefix + """webjars/$file<.+>"""))
   }
}
        
}

}
     